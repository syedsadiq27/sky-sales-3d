ACC.productDetail = {

    _autoload: [
        "initPageEvents",
        "bindVariantOptions"
    ],


    checkQtySelector: function (self, mode) {
    	var $qtySelector = $(document).find(self).parents(".js-qty-selector");
        var input = $qtySelector.find(".js-qty-selector-input");
        var inputVal = parseInt(input.val());
        var max = input.data("max");
        var minusBtn = $qtySelector.find(".js-qty-selector-minus");
        var plusBtn = $qtySelector.find(".js-qty-selector-plus");

        $qtySelector.find(".btn").removeAttr("disabled");

        if (mode == "minus") {
            if (inputVal != 1) {
                ACC.productDetail.updateQtyValue(self, inputVal - 1)
                if (inputVal - 1 == 1) {
                    minusBtn.attr("disabled", "disabled")
                }

            } else {
                minusBtn.attr("disabled", "disabled")
            }
        } else if (mode == "reset") {
            ACC.productDetail.updateQtyValue(self, 1)

        } else if (mode == "plus") {
        	if(max == "FORCE_IN_STOCK") {
        		ACC.productDetail.updateQtyValue(self, inputVal + 1)
        	} else if (inputVal <= max) {
        		
               
                if (inputVal == max) {
                    plusBtn.attr("disabled", "disabled")
                }
                else{
                	ACC.productDetail.updateQtyValue(self, inputVal + 1)
                }
                
            } else {
                plusBtn.attr("disabled", "disabled")
            }
        } else if (mode == "input") {
            if (inputVal == 1) {
                minusBtn.attr("disabled", "disabled")
            } else if(max == "FORCE_IN_STOCK" && inputVal > 0) {
            	ACC.productDetail.updateQtyValue(self, inputVal)
            } else if (inputVal == max) {
                plusBtn.attr("disabled", "disabled")
            } else if (inputVal < 1) {
                ACC.productDetail.updateQtyValue(self, 1)
                minusBtn.attr("disabled", "disabled")
            } else if (inputVal > max) {
                ACC.productDetail.updateQtyValue(self, max)
                plusBtn.attr("disabled", "disabled")
            }
        } else if (mode == "focusout") {
        	if (isNaN(inputVal)){
                ACC.productDetail.updateQtyValue(self, 1);
                minusBtn.attr("disabled", "disabled");
        	} else if(inputVal >= max) {
                plusBtn.attr("disabled", "disabled");
            }
        }

    },

    updateQtyValue: function (self, value) {
        var input = $(document).find(self).parents(".js-qty-selector").find(".js-qty-selector-input");
        var addtocartQty = $(document).find(self).parents(".addtocart-component").find("#addToCartForm").find(".js-qty-selector-input");
        var configureQty = $(document).find(self).parents(".addtocart-component").find("#configureForm").find(".js-qty-selector-input");
        input.val(value);
        addtocartQty.val(value);
        configureQty.val(value);
    },

    initPageEvents: function () {
        $(document).on("click", '.js-qty-selector .js-qty-selector-minus', function () {
            ACC.productDetail.checkQtySelector(this, "minus");
        })

        $(document).on("click", '.js-qty-selector .js-qty-selector-plus', function () {
            ACC.productDetail.checkQtySelector(this, "plus");
        })

        $(document).on("keydown", '.js-qty-selector .js-qty-selector-input', function (e) {

            if (($(this).val() != " " && ((e.which >= 48 && e.which <= 57 ) || (e.which >= 96 && e.which <= 105 ))  ) || e.which == 8 || e.which == 46 || e.which == 37 || e.which == 39 || e.which == 9) {
            }
            else if (e.which == 38) {
                ACC.productDetail.checkQtySelector(this, "plus");
            }
            else if (e.which == 40) {
                ACC.productDetail.checkQtySelector(this, "minus");
            }
            else {
                e.preventDefault();
            }
        })

        $(document).on("keyup", '.js-qty-selector .js-qty-selector-input', function (e) {
            ACC.productDetail.checkQtySelector(this, "input");
            ACC.productDetail.updateQtyValue(this, $(this).val());

        })
        
        $(document).on("focusout", '.js-qty-selector .js-qty-selector-input', function (e) {
            ACC.productDetail.checkQtySelector(this, "focusout");
            ACC.productDetail.updateQtyValue(this, $(this).val());
        })

        $("#Size").change(function () {
            changeOnVariantOptionSelection($("#Size option:selected"));
        });

        $("#variant").change(function () {
            changeOnVariantOptionSelection($("#variant option:selected"));
        });

        $(".selectPriority").change(function () {
            window.location.href = $(this[this.selectedIndex]).val();
        });
        $("input[name='variantOption']").change(function(e){
       	 var scratched2 = $(this).parent('.variantOption').data('discountprice');
       	var newcode = $(this).parent('.variantOption').data('code');
       	var newname = $(this).parent('.variantOption').data('name');
       	var newprice = $(this).parent('.variantOption').data('price');
       	var description_tab= $(this).parent('.variantOption').data('description');
       	var space=$(this).parent('.variantOption').data('classifications');
      
       	var label_image=$(this).parent('.variantOption').data('label');
       	var unitdes = $(this).parent('.variantOption').data('unitofmeasuredescription');
       	var unit = $(this).parent('.variantOption').data('unitofmeasure');
       	var stocklevelstatus = $(this).parent('.variantOption').data('stocklevelstatus');
       	var newisinwishlist = $(this).parent('.variantOption').data('isinwishlist');
       	var url = $(this).parent('.variantOption').data('url');
       	var oreginalprice= $(this).parent('.variantOption').data('oreginalprice');
       var data_max=$(this).parent('.variantOption').data('stocklevel');
       var classifications=$(this).parent('.variantOption').data('classifications');
       var promotext=$(this).parent('.variantOption').data('promotext');
       var type=$(this).parent('.variantOption').attr("for");
       
       	var description = $(this).parent('.variantOption').data('description');
       	var description_summary = $(this).parent('.variantOption').data('summary');
       	$(".product-details .code").html('id',newcode)
       	$(".product-details .code").html(newcode)
       	$(".variant-name .typeName").html(':'+' '+type)
       	$(".product-details .removeWishlistEntry.wishlistbtn").data('productcode',newcode)
       	$(".product-details .addWishlistEntry.wishlistbtn").data('productcode',newcode)
       
       	$(".product-details .description").html(description)
       	$(".dsecription_detail").html(description_tab)
       	//dsecription_detail
       	$(".product-classifications").html(space)
       	$(".product-details .name").html(newname)
       	$(".product-details .product-classifications").html(classifications)
       	$(".product-details .price").html(newprice)
       	$("meta[property='og:url']").attr("content", url);
       	$("meta[property='og:title']").attr("content",newname );
       	
       	
       	if(label_image != ' '){	
       		
       	$(".label_image").html(label_image);
    	$(".label_image").css("display","inline");}
       	else{
       		$(".label_image").html();
        	$(".label_image").css("display","none");
       		
       		
       	}
       	if(unit){ $(".product-details .unitdescription").html(unit+' - '+unitdes);	}
       	else{$(".product-details .unitdescription").html();	}
       	
       	$("meta[property='og:description']").attr("content",description_summary );
       	if(scratched2 != ' '){
           $('.scratched').html(oreginalprice);
           $('.line_discount').css("display","inline")
           $(".product-details .price").html(scratched2)
           if(promotext){
           	$(".promo").html("<div class='bundle'><p class='promotion'>"+promotext+"</p><i class='fas fa-percent'></i></div>")
           }
       	}
       	else{
       		$('.scratched').html('');
       		 $(".product-details .price").html(newprice)
       		$('.promo').html('');
       		 $('.line_discount').css("display","none")
       	}
       	
       $(".addcart_pdp .js-qty-selector-input").data('max',data_max)
      $(".addcart_pdp input[name='productCodePost']").attr('value',newcode)
       	if(!newisinwishlist){
       		$(".product-details .removeWishlistEntry").addClass('hidden');
       		$(".product-details .addWishlistEntry").removeClass('hidden');
       	}
       	else{
       		$(".product-details .removeWishlistEntry").removeClass('hidden');
       		$(".product-details .addWishlistEntry").addClass('hidden');
       	}
       	if (data_max>0){
       		
       		$(".addcart_pdp .js-add-to-cart").prop("disabled", false);
       		
       		if(stocklevelstatus == 'lowStock'){
       			$(".addcart_pdp .stock-wrapper").html("<i class='far fa-check-circle'></i> only "+data_max+" Left Online");
       			if($(".addcart_pdp .js-qty-selector-input").val()>= data_max)
          				{
       				$(".addcart_pdp .js-qty-selector-input").val(data_max);
       				
       				}
       		}
       		else{
       			$(".addcart_pdp .stock-wrapper").html("<i class='far fa-check-circle'></i> In Stock");
       		}
       		
       	
   			
       	}else
       		{
       		
       		$(".product-details .js-add-to-cart").prop("disabled", true);
       		$(".product-details  .stock-wrapper").html("<i class='fas fa-times-circle red'></i> Out of Stock");
       		
       		
       		$(".product-details .js-qty-selector-input").val(1);
       		}
       	
       	
       	//window.history.pushState("page", newname, './'+newcode);

//      	 window.location.href = $(this).val();
      });

        function changeOnVariantOptionSelection(optionSelected) {
            window.location.href = optionSelected.attr('value');
        }
    },

    bindVariantOptions: function () {
        ACC.productDetail.bindCurrentStyle();
        ACC.productDetail.bindCurrentSize();
        ACC.productDetail.bindCurrentType();
    },

    bindCurrentStyle: function () {
        var currentStyle = $("#currentStyleValue").data("styleValue");
        var styleSpan = $(".styleName");
        if (currentStyle != null) {
            styleSpan.text(": " + currentStyle);
        }
    },

    bindCurrentSize: function () {
        var currentSize = $("#currentSizeValue").data("sizeValue");
        var sizeSpan = $(".sizeName");
        if (currentSize != null) {
            sizeSpan.text(": " + currentSize);
        }
    },

    bindCurrentType: function () {
        var currentSize = $("#currentTypeValue").data("typeValue");
        var sizeSpan = $(".typeName");
        if (currentSize != null) {
            sizeSpan.text(": " + currentSize);
        }
    }
};